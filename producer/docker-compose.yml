---
version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME}
      - ALLOW_ANONYMOUS_LOGIN=yes

  broker:
    image: confluentinc/cp-kafka:7.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.27.2
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker
    ports:
      - "8088:8088"
    environment:
      - KSQL_LISTENERS=${KSQL_LISTENERS}
      - KSQL_BOOTSTRAP_SERVERS=${KSQL_BOOTSTRAP_SERVERS}
      - KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE=${KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE}
      - KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE=${KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE}

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.27.2
    container_name: ksqldb-cli
    depends_on:
      - broker
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true